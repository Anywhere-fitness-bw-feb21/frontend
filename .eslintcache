[{"/Users/yf/Desktop/Lambda/flex/frontend/src/index.js":"1","/Users/yf/Desktop/Lambda/flex/frontend/src/App.js":"2","/Users/yf/Desktop/Lambda/flex/frontend/src/reducers/index.js":"3","/Users/yf/Desktop/Lambda/flex/frontend/src/components/Register.js":"4","/Users/yf/Desktop/Lambda/flex/frontend/src/components/Login.js":"5"},{"size":498,"mtime":1612221517833,"results":"6","hashOfConfig":"7"},{"size":522,"mtime":1612221986803,"results":"8","hashOfConfig":"7"},{"size":218,"mtime":1612221528611,"results":"9","hashOfConfig":"7"},{"size":3342,"mtime":1612220360848,"results":"10","hashOfConfig":"7"},{"size":1028,"mtime":1612222072430,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1ks8u94",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/yf/Desktop/Lambda/flex/frontend/src/index.js",["24"],"/Users/yf/Desktop/Lambda/flex/frontend/src/App.js",[],"/Users/yf/Desktop/Lambda/flex/frontend/src/reducers/index.js",[],["25","26"],"/Users/yf/Desktop/Lambda/flex/frontend/src/components/Register.js",["27","28"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport * as yup from \"yup\";\nconst initialValues = {\n  // text inputs\n  name: \"\",\n  username: \"\",\n  email: \"\",\n  password: \"\",\n\n  // checkbox for position\n  role: false,\n};\n\nconst initialValueErrors = {\n  username: \"\",\n  email: \"\",\n  password: \"\",\n};\n\nconst initialMembers = [];\nconst initialDisabled = true;\n\nexport default function Register() {\n  const [members, setMembers] = useState(initialMembers);\n  const [formValues, setFormValues] = useState(initialValues);\n  const [formErrors, setFormErrors] = useState(initialValueErrors);\n  const [disabled, setDisabled] = useState(initialDisabled);\n\n  const schema = yup.object().shape({\n    username: yup.string().min(8, \"Username must be 8 characters long\"),\n    email: yup\n      .string()\n      .email(\"Must be a valid email address\")\n      .required(\"Must include email address\"),\n    password: yup\n      .string()\n      .required(\"Password is required\")\n      .min(8, \"Password must be 8 characters long\"),\n    role: yup.boolean().oneOf([true], \"This is required\"),\n  });\n\n  const validate = (evt) => {\n    yup\n      .reach(schema, evt.target.username)\n      .validate(evt.target.value)\n      .then(() => {\n        setFormErrors({\n          ...formErrors,\n          [evt.target.name]: \"\",\n        });\n      })\n      .catch((err) => {\n        setFormErrors({\n          ...formErrors,\n          [evt.target.username]: err.formErrors,\n        });\n      });\n  };\n  const inputChange = (evt) => {\n    evt.persist();\n    validate(evt);\n    setFormValues({\n      ...formValues,\n      [evt.target.name]: evt.target.value,\n    });\n  };\n  const postMember = (newMemeber) => {\n    axios\n      .post(\n        \"https://anytime-fitness.herokuapp.com/api/auth/register\",\n        newMemeber\n      )\n      .then((res) => {\n        setMembers([...members, res.data]);\n        setFormValues(initialValues);\n      })\n      .catch((err) => console.log(err));\n  };\n  const onSubmit = () => {\n    const newMemeber = {\n      name: formValues.name.trim(),\n      username: formValues.username.trim(),\n      email: formValues.email.trim(),\n      password: formValues.password.trim(),\n      position: [\"position\"].filter((term) => formValues[term]),\n    };\n    postMember(newMemeber);\n  };\n\n  useEffect(() => {\n    schema.isValid(formValues).then((valid) => setDisabled(!valid));\n  }, [formValues]);\n\n  return (\n    <form onSubmit={onSubmit}>\n      <label>\n        Name\n        <input name=\"name\" value={members.name} onChange={inputChange} />\n      </label>\n      <label>\n        Username\n        <input\n          name=\"username\"\n          value={members.username}\n          onChange={inputChange}\n        />\n      </label>\n      <label>\n        Email\n        <input name=\"email\" value={members.email} onChange={inputChange} />\n      </label>\n      <label>\n        Password\n        <input\n          name=\"password\"\n          value={members.password}\n          onChange={inputChange}\n        />\n      </label>\n      <label>\n        Client\n        <input type=\"checkbox\" value=\"Client\" onChange={inputChange} />\n      </label>\n      <label>\n        Instructor\n        <input type=\"checkbox\" value=\"Instructor\" onChange={inputChange} />\n      </label>\n      <button onSubmit={onSubmit}>Submit</button>\n    </form>\n  );\n}\n","/Users/yf/Desktop/Lambda/flex/frontend/src/components/Login.js",["29","30"],{"ruleId":"31","severity":1,"message":"32","line":9,"column":10,"nodeType":"33","messageId":"34","endLine":9,"endColumn":16},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"31","severity":1,"message":"39","line":29,"column":10,"nodeType":"33","messageId":"34","endLine":29,"endColumn":18},{"ruleId":"40","severity":1,"message":"41","line":94,"column":6,"nodeType":"42","endLine":94,"endColumn":18,"suggestions":"43"},{"ruleId":"31","severity":1,"message":"44","line":2,"column":20,"nodeType":"33","messageId":"34","endLine":2,"endColumn":29},{"ruleId":"31","severity":1,"message":"45","line":16,"column":21,"nodeType":"33","messageId":"34","endLine":16,"endColumn":31},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["46"],"no-negated-in-lhs",["47"],"'disabled' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'schema'. Either include it or remove the dependency array.","ArrayExpression",["48"],"'useEffect' is defined but never used.","'setloginIn' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"49","fix":"50"},"Update the dependencies array to be: [formValues, schema]",{"range":"51","text":"52"},[2408,2420],"[formValues, schema]"]